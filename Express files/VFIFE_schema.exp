
SCHEMA VFIFE_schema;

(*--------------------------------NODE--------------------------------------------*)

ENTITY node;
 	node_id : INTEGER;
 	node_name : STRING;
 	node_coords : cartesian_point;
 	restraints : boundary_condition;
INVERSE
	on_bar : bar FOR bar_node;
END_ENTITY;

ENTITY cartesian_point;
	coordinates : LIST [1:3] OF REAL;
END_ENTITY;  (*  STEP Part 42 (modified in 2nd edition)  *)

ENTITY boundary_condition
ABSTRACT SUPERTYPE OF 
		(boundary_condition_logical);
 	boundary_condition_name : STRING;
 	boundary_condition_description : OPTIONAL STRING;
INVERSE
 	restrained_nodes : SET [1:?] OF node FOR restraints;
END_ENTITY;

ENTITY boundary_condition_logical
SUBTYPE OF (boundary_condition);
	bc_x_displacement_free : LOGICAL;
	bc_y_displacement_free : LOGICAL;
	bc_z_displacement_free : LOGICAL;
	bc_x_rotation_free : LOGICAL;
	bc_y_rotation_free : LOGICAL;
	bc_z_rotation_free : LOGICAL;
END_ENTITY;


(*------------------------------------BAR--------------------------------------------*)

ENTITY bar;
	bar_id : INTEGER;
	bar_node : LIST [2:?] OF node;
	bar_material : material;
	section_area : REAL;
END_ENTITY;

(*--------------------------------MATERIAL--------------------------------------------*)

ENTITY material;
	name: STRING;
	young_modulus: REAL;
	density: REAL;
END_ENTITY;

(*--------------------------------LOAD FORCE--------------------------------------------*)
(*Edit by zxw*)
ENTITY load
ABSTRACT SUPERTYPE OF (ONEOF(load_member, load_node));
	parent_load_case : load_case;
	load_name : STRING;
	load_description : OPTIONAL STRING;
	start_time : REAL; 
	end_time : REAL;
END_ENTITY;

ENTITY load_node
SUBTYPE OF (load);
	supporting_node: node;
	load_values : applied_load;
END_ENTITY;

ENTITY load_member
ABSTRACT SUPERTYPE OF (ONEOF(load_member_concentrated))
SUBTYPE OF (load);
	supporting_member : bar;
END_ENTITY;

ENTITY load_member_concentrated
SUBTYPE OF (load_member);
	load_position : cartesian_point;
	load_value : applied_load;
END_ENTITY;

(*--------------------------------LOAD case--------------------------------------------*)

(* Modified for LPM/6 *)
ENTITY load_case;
 	load_case_name : STRING;
 	load_case_factor : OPTIONAL REAL;
 	time_variation : physical_action;
END_ENTITY;

(*--------------physical actions--------------*)

ENTITY physical_action
SUPERTYPE OF (ONEOF
 		(physical_action_permanent, 	(*恒力*)
 		physical_action_variable,		(*变力*)
 		physical_action_accidental 		(*突发力*)
 		));		(*地震力*)
 	action_nature : static_or_dynamic;
END_ENTITY;

ENTITY physical_action_accidental 
SUBTYPE OF (physical_action);
 	action_source : action_source_accidential;
END_ENTITY;

ENTITY physical_action_permanent
SUBTYPE OF (physical_action);
 	action_source : action_source_permanent;
END_ENTITY;

ENTITY physical_action_seismic
SUBTYPE OF (physical_action);
END_ENTITY;

ENTITY physical_action_variable 
ABSTRACT SUPERTYPE OF (ONEOF
 		(
 		physical_action_variable_transient))
SUBTYPE OF (physical_action);
END_ENTITY;

ENTITY physical_action_variable_transient 
SUBTYPE OF (physical_action_variable);
	action_source : action_source_variable_transient;
END_ENTITY;




(*---------applied load-----------*)

ENTITY applied_load 
ABSTRACT SUPERTYPE OF (applied_load_static); 
	applied_load_name : STRING;
END_ENTITY;

ENTITY applied_load_static
ABSTRACT SUPERTYPE OF (
 		applied_load_static_force)
SUBTYPE OF (applied_load);
END_ENTITY;

ENTITY applied_load_static_force
SUBTYPE OF (applied_load_static);
 	applied_force_fx : OPTIONAL real;
 	applied_force_fy : OPTIONAL real;
 	applied_force_fz : OPTIONAL real; (*force_measure_with_unit;*)
 	applied_moment_mx : OPTIONAL real;(*moment_measure_with_unit;*)
 	applied_moment_my : OPTIONAL real;
 	applied_moment_mz : OPTIONAL real;
WHERE
	WRA14 : EXISTS (applied_force_fx) OR
		EXISTS (applied_force_fy) OR
		EXISTS (applied_force_fz) OR
		EXISTS (applied_moment_mx) OR
		EXISTS (applied_moment_my) OR
		EXISTS (applied_moment_mz);
END_ENTITY;


(*--------TYPE DEFINES--------*)

TYPE static_or_dynamic
 = ENUMERATION OF 
	(static, dynamic, quasi_dynamic);
END_TYPE;

TYPE action_source_accidential
 = ENUMERATION OF 
	(fire, impulse, impact, undefined);
END_TYPE;

TYPE action_source_permanent
 = ENUMERATION OF 
	(dead, 
	self_weight,
	prestress,
	lack_of_fit,
	undefined);
END_TYPE;

TYPE action_source_variable_transient
 = ENUMERATION OF 
	(transport, erection, propping, undefined);
END_TYPE;

END_SCHEMA;

